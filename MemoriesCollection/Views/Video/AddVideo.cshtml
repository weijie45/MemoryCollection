@{
    ViewBag.Title = "上傳影片";
}

<div class="wj-dropBlock hidden">Drag & Drop Video Here</div>
<div class="wj-block-c">
    <input type="file" name="file-1[]" id="imgUpload" class="inputfile inputfile-1" data-multiple-caption="{count} files selected" multiple />
    <label for="imgUpload"><span>請選擇影片&hellip;</span></label>
</div>
@*<div class="wj-block-c">
        <button id="Save" class="button btn-c1" onclick="UploadVideo($('#imgUpload').get(0).files)" disabled>確認上傳</button>
    </div>*@

<div id="result" class="gallery"></div>

<div id="vedioBlock">
    <div class="info">
        <div class="items"></div>
    </div>
</div>

@section Scripts {
    <script>
        var $Video = "";
        window.onbeforeunload = function () {
            return true;
        };

        $('.inputfile').on('change', function () {
            $('.items').empty();
        });

        function Upload(videoId, num) {

            var file = $('#imgUpload').get(0).files[num];
            $('#{0}_btn'.format(videoId)).attr('onclick', '').prop('disabled', true);

            var fd = new FormData(); // Create a FormData object
            var size = 0;
            var msg = [];
            VideoThumbnail(document.getElementById(videoId), num);

        }

        // 圖片上傳
        $('#imgUpload').on('change', function (e) {
            InitVideo(e.target.files);
        });

        $(function () {
            // 拖拉區塊
            //http://www.tipocode.com/html/drag-and-drop-multiple-files-upload-with-html5-jquery-formdata/#
            $('.wj-dropBlock').on('dragover', function (e) {
                $(this).attr('class', 'drop_hover');
                e.preventDefault();
                e.stopPropagation();
            });

            // Add eventhandlers for dragenter and prevent the default actions for this event
            $('.wj-dropBlock').on('dragenter', function (e) {
                e.preventDefault();
                e.stopPropagation();
            });

            $('.wj-dropBlock').on('dragleave', function (e) {
                $(this).attr('class', 'wj-dropBlock');
            });

            $('.wj-dropBlock').on('drop', function (e) {
                if (e.originalEvent.dataTransfer) {
                    if (e.originalEvent.dataTransfer.files.length) {
                        $('.items').empty();
                        e.preventDefault();
                        e.stopPropagation();
                        $('#imgUpload').get(0).files = e.originalEvent.dataTransfer.files;
                        InitVideo(e.originalEvent.dataTransfer.files);
                    }
                }
            });

        });

        function UploadVideo(videoId, num) { // upload function
            var file = $('#imgUpload').get(0).files[num];
            var fd = new FormData(); // Create a FormData object
            var size = file.size;
            var msg = [];
            msg.push(file.length == 0 ? "請上傳檔案 !" : "");

            var imgSrc = $('#img_' + num).attr('src');
            if (typeof imgSrc == undefined) {
                msg.push("縮圖尚未完成...請稍後");
            }

            var modifyDate = new Date(typeof (file.lastModified) == 'undefined' ? new Date() : file.lastModified);
            fd.append('fileModDate_' + num, modifyDate.toISOString().substring(0, 10) + " " + modifyDate.toTimeString().substring(0, 8));
            fd.append('file_' + num, file);
            fd.append('img_' + num, dataURLtoFile(imgSrc, 'filename.jpg'));
            fd.append('fileTsize', size);

            msg = msg.filter(Boolean);

            if (msg.length > 0) {
                layer.alert(msg.join("<br>"), { title: '請輸入正確資料', icon: 7 });
            } else {

                var progressNotifier = $.connection.progressHub;
                progressNotifier.client.sendMessage = function (message) {
                    _Percent = message;
                    UpdateProgress();
                };
                $Video = $('#{0}_btn'.format(videoId));
                $.connection.hub.start().done(function () {
                    Sys.AjaxUpload("/Video/ConfirmUpload", fd, function (data) {
                        GetSum();
                    });
                });

            }
        }

        function UpdateProgress() {
            if ($Video != "") {
                if (parseInt(_Percent) >= 100) {
                    var name = $Video.attr('data-param');
                    $Video.html("上傳").removeClass('btn-confirm').html('<i class="fa fa-check" aria-hidden="true">{0}</i>'.format(name));
                } else {
                    $Video.html("上傳中...{0}%".format($.number(_Percent, 2), ""));
                }
            }
        }

        function InitVideo(files, num) {
            var size = 0;
            var len = files.length;
            if (len > 10) {
                layer.alert('最多上傳10部影片 !', { icon: 7 });
                return false;
            }
            for (var i = 0; i < files.length; i++) {
                if (files[i].size > '@AppConfig.SingleFileSize') {
                    layer.alert("檔案不可大於1G !", { icon: 7 });
                    return false;
                }
                size += files[i].size;
            }
            if (size > '@AppConfig.FileTotalSize') {
                layer.alert("總檔案不可大於2G !", { icon: 7 });
                return false;
            }

            for (var i = 0; i < files.length; i++) { // Loop all files
                var file = files[i];
                var type = file.type;
                var videoId = "video_{0}".format(i);
                if (['video/mp4', 'video/quicktime'].indexOf(type) == -1) {
                    layer.alert('Error : Only MP4 format allowed', { icon: 7 });
                    return;
                }
                var name = file.name;
                var blob = new Blob([file], { type: type });
                var url = URL.createObjectURL(blob);
                var video = document.createElement('video');
                video.setAttribute("id", videoId);
                video.setAttribute("controls", '');
                video.setAttribute("autoplay", '');
                video.setAttribute("width", '320');
                video.setAttribute("height", '240');
                video.setAttribute('style', 'display:none');
                video.setAttribute("type", type);
                //video.preload = 'metadata';
                video.src = url;
                video.muted = true;
                video.playsInline = true;

                var html = "<div class='box wj-block-l' id='{0}_div'><button type='button' data-param='{2}' class='button btn-confirm'style='display:none' id='{0}_btn' onclick='Upload(\"{0}\",\"{1}\")'><i class='fa fa-cloud-upload' aria-hidden='true'>{2}</i></button></div>";
                $('.items').append(html.format(videoId, i, name.replace(/\.[^/.]+$/, "")));
                $('#{0}_div'.format(videoId)).append(video);
                //video.addEventListener('playing', plaaaa(video));
                plaaaa(video);
            }
        }

        function plaaaa(e) {
            e.pause();
            $('#{0}_btn'.format(e.id)).show();
        }

        function VideoThumbnail(video, num) {
            var fd = new FormData(); // Create a FormData object
            var msg = [];
            //msg.push(file.length == 0 ? "請先上傳影片 !" : "");
            msg = msg.filter(Boolean);
            $('#{0}_btn'.format(video.id)).text('製作縮圖...');
            var file = $('#imgUpload').get(0).files[num];
            if (msg.length > 0) {
                layer.alert(msg.join("<br>"), { title: '請輸入正確資料', icon: 7 });
            } else {
                fd.append('file', file);
                Sys.AjaxUpload("/Video/ChkSize", fd, function (data) {
                    var j = JSON.parse(data[1]);
                    shoot(video, j.w, j.h);
                });
            }
        }


        var _ScaleFactor = 0.5;

        function capture(video, aW, aH) {
            var w = video.videoWidth;
            var h = video.videoHeight;
            w *= _ScaleFactor;
            h *= _ScaleFactor;
            var canvas = document.createElement('canvas');
            canvas.width = w;
            canvas.height = h;
            var ctx = canvas.getContext('2d');

            var os = _UaSpec.os.name;
            var browser = _UaSpec.browser.name;

            if ((os == "iOS" || browser == "Firefox") &&
                ((aW == video.videoHeight && aH == video.videoWidth) || aW == "0")) {
                // translate and rotate
                ctx.translate(w, h / w);
                ctx.rotate(Math.PI / 2);
                // draw the previows image, now rotated
                if (browser == "Firefox") {
                    ctx.drawImage(video, 0, 0, w * 2, w);
                } else {
                    ctx.drawImage(video, 0, 0, w * 2, w * 2);
                }

            } else {
                ctx.drawImage(video, 0, 0, w, h);
            }
            return canvas;
        }

        function shoot(video, w, h) {
            var canvas = capture(video, w, h);
            var videoId = video.id;
            var num = parseInt(videoId.substr(videoId.lastIndexOf('o') + 2));
            var img = document.createElement('img');
            img.setAttribute('src', canvas.toDataURL());
            img.setAttribute('id', 'img_' + num);
            img.onload = function () {
                UploadVideo(videoId, num);
            };
            img.setAttribute('style', 'display:none');
            //img.setAttribute('style', 'border:1px solid red');
            document.getElementById('result').appendChild(img);
        }

        function dataURLtoFile(dataurl, filename) {
            var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
                bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], filename, { type: mime });
        }
    </script>
}
